{
  "hash": "099c0504edb9e79e6140c5e3f5bc09bf",
  "result": {
    "engine": "knitr",
    "markdown": "---\nproject:\n  title: \"ESS 330 Paper Proposals\"\n  output-dir: docs\n  type: website\nformat:\n  \n  html:\n    self-contained: true\nauthors:\n  - name: Mia Colangelo\n    affiliation: Colorado State University\n    roles: writing\n    corresponding: true\n  - name: Neva Morgan\n    affiliation: Colorado State University\n    roles: writing\n    corresponding: false\nbibliography: references.bib\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n#### **Title:**\n\nFlight in Flux: Analyzing American Bittern (Botaurus lentiginosus)\nMigration Timing and Climate Change\n\n**Introduction:** Climate change poses many questions relating to\nsystems across the globe, especially ecological and evolutionary\nsystems. One system which could potentially be heavily impacted is\nmigration. Bird migration timing is critical for ensuring species\nsurvival and ecological balance. As anthropogenic climate change has\naltered seasonal patterns, there is a potential disruption to migration\ntiming, impacting birds' breeding success, food availability, and\noverall population health. The American Bittern (Botaurus lentiginosus),\nfor example, depends on the thriving vegetation of marshlands for\ncamouflage and nesting, as they are known to nest on the ground. Wetland\nbirds are expected to be affected negatively by a considerable margin\nwith the presence of a changing climate altering their regular migratory\nranges and patterns (Steen et al., 2012).\n\n**Abstract/Background:** The American Bittern is a solitary, cryptic\nspecies that relies on wetlands for breeding and overwintering.\nTypically, these birds breed in freshwater marshes across Canada and the\nnorthern United States before migrating south to the southeastern U.S.,\nMexico, and Central America for the winter. However, increasing global\ntemperatures, shifts in precipitation, and habitat loss due to climate\nchange threaten to disrupt these migration patterns. Past studies on\nmigratory birds indicate that climate change is leading to earlier\nspring arrivals, delayed fall departures, and shifts in overall\nmigration routes (La Sorte & Thompson, 2007). For wetland-dependent\nbirds like the American Bittern, changes in water levels due to altered\nprecipitation cycles could further complicate their ability to find\nsuitable stopover sites and breeding grounds. Given that wetlands are\nalready among the most threatened ecosystems in North America, with\nsignificant losses due to urbanization and agriculture, climate-induced\nchanges pose an additional challenge (Dahl, 2011). Studying the\nmigration patterns of the American Bittern under a changing climate is\nessential for predicting future population trends and informing\nconservation strategies. By understanding how climate variables\ninfluence their movements, conservationists can prioritize habitat\nprotection, restoration, and adaptive management to mitigate potential\nnegative impacts.\n\n**Sources:** American bittern overview, all about birds, Cornell Lab of\nOrnithology. Overview, All About Birds, Cornell Lab of Ornithology.\n(n.d.). https://www.allaboutbirds.org/guide/American_Bittern/overview\n\nDahl, T. E. (2011). Status and trends of wetlands in the conterminous\nUnited States 2004 to 2009. US Department of the Interior, US Fish and\nWildlife Service, Fisheries and Habitat Conservation.\n\nLa Sorte, F. A., & Thompson III, F. R. (2007). Poleward shifts in winter\nranges of North American birds. Ecology, 88(7), 1803-1812.\n\n**Motivation:** Bird migration range and timing is critical for ensuring\nspecies survival and ecological balance. However, climate change has\naltered seasonal patterns, potentially disrupting migration timing and\nimpacting breeding success, food availability, and overall population\nhealth. Understanding these shifts can inform conservation strategies\nand mitigate risks to migratory bird species. Additionally, information\ngained from analyzing one species can be used to make inferences about\nthe potential shifts in other similar species.\n\n**Data** American Bittern Migration: Steen, V., Powell, A. N. (2012).\n\"Potential Effects of Climate Change on the Distribution of Waterbirds\nin the Prairie Pothole Region, U.S.A.,\" Waterbirds, 35(2), 217-229.\nhttps://doi.org/10.1675/063.035.0204.\n\nBeginning Mumbo Jumbo Libraries:\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(readr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'readr' was built under R version 4.4.3\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(flextable)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'flextable' was built under R version 4.4.3\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(readr)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'tidyverse' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'ggplot2' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'tidyr' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'purrr' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'dplyr' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'lubridate' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ purrr     1.0.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ purrr::compose() masks flextable::compose()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'tidymodels' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.3.0 ──\n✔ broom        1.0.8     ✔ rsample      1.3.0\n✔ dials        1.4.0     ✔ tune         1.3.0\n✔ infer        1.0.8     ✔ workflows    1.2.0\n✔ modeldata    1.4.0     ✔ workflowsets 1.1.0\n✔ parsnip      1.3.1     ✔ yardstick    1.3.2\n✔ recipes      1.3.0     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'broom' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'dials' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'infer' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'parsnip' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'recipes' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'rsample' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'tune' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'workflows' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'yardstick' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::compose()  masks flextable::compose()\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(ggplot2)\nlibrary(purrr)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(tidyr)\nlibrary(gridExtra)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'gridExtra' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'gridExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n```\n\n\n:::\n:::\n\n\n\n**Methods**\n\n1.  Create time period for seasons\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Read in all climate data\nAZ_kingman <- read_csv(\"data/Climate Data/AZ-kingman-climate.csv\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 345 Columns: 90\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (42): STATION, DATE, NAME, ADPT_ATTRIBUTES, ASLP_ATTRIBUTES, ASTP_ATTRIB...\ndbl (45): LATITUDE, LONGITUDE, ELEVATION, ADPT, ASLP, ASTP, AWBT, AWND, CDSD...\nlgl  (3): DYFG_ATTRIBUTES, DYHF_ATTRIBUTES, DYTS_ATTRIBUTES\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nAZ_phoenix <- read_csv(\"data/Climate Data/AZ-phoenix-climate.csv\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 319 Columns: 82\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (38): STATION, DATE, NAME, AWND_ATTRIBUTES, CDSD_ATTRIBUTES, CLDD_ATTRIB...\ndbl (41): LATITUDE, LONGITUDE, ELEVATION, AWND, CDSD, CLDD, DP01, DP10, DP1X...\nlgl  (3): DYFG_ATTRIBUTES, DYHF_ATTRIBUTES, DYTS_ATTRIBUTES\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nCA_lake_tahoe <- read_csv(\"data/Climate Data/CA-lake-tahoe-climate.csv\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 657 Columns: 96\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (45): STATION, DATE, NAME, ADPT_ATTRIBUTES, ASLP_ATTRIBUTES, ASTP_ATTRIB...\ndbl (48): LATITUDE, LONGITUDE, ELEVATION, ADPT, ASLP, ASTP, AWBT, AWND, CDSD...\nlgl  (3): DYFG_ATTRIBUTES, DYHF_ATTRIBUTES, DYTS_ATTRIBUTES\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nCA_sandiego <- read_csv(\"data/Climate Data/CA-sandiego-climate.csv\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 849 Columns: 84\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (39): STATION, DATE, NAME, AWND_ATTRIBUTES, CDSD_ATTRIBUTES, CLDD_ATTRIB...\ndbl (42): LATITUDE, LONGITUDE, ELEVATION, AWND, CDSD, CLDD, DP01, DP10, DP1X...\nlgl  (3): DYFG_ATTRIBUTES, DYHF_ATTRIBUTES, DYTS_ATTRIBUTES\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nCA_santarosa <- read_csv(\"data/Climate Data/CA-santarosa_climate.csv\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 322 Columns: 96\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (45): STATION, DATE, NAME, ADPT_ATTRIBUTES, ASLP_ATTRIBUTES, ASTP_ATTRIB...\ndbl (48): LATITUDE, LONGITUDE, ELEVATION, ADPT, ASLP, ASTP, AWBT, AWND, CDSD...\nlgl  (3): DYFG_ATTRIBUTES, DYHF_ATTRIBUTES, DYTS_ATTRIBUTES\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nOR_chiloquin <- read_csv(\"data/Climate Data/OR-chiloquin-climate.csv\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 511 Columns: 68\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (30): STATION, DATE, NAME, CLDD_ATTRIBUTES, DP01_ATTRIBUTES, DP10_ATTRIB...\ndbl (36): LATITUDE, LONGITUDE, ELEVATION, CDSD, CDSD_ATTRIBUTES, CLDD, DP01,...\nlgl  (2): DYFG_ATTRIBUTES, DYTS_ATTRIBUTES\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nOR_hermiston <- read_csv(\"data/Climate Data/OR-hermiston-climate.csv\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 324 Columns: 82\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (38): STATION, DATE, NAME, AWND_ATTRIBUTES, CDSD_ATTRIBUTES, CLDD_ATTRIB...\ndbl (41): LATITUDE, LONGITUDE, ELEVATION, AWND, CDSD, CLDD, DP01, DP10, DP1X...\nlgl  (3): DYFG_ATTRIBUTES, DYHF_ATTRIBUTES, DYTS_ATTRIBUTES\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nWA_shelton <- read_csv(\"data/Climate Data/WA-shelton-climate.csv\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 321 Columns: 96\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (45): STATION, DATE, NAME, ADPT_ATTRIBUTES, ASLP_ATTRIBUTES, ASTP_ATTRIB...\ndbl (48): LATITUDE, LONGITUDE, ELEVATION, ADPT, ASLP, ASTP, AWBT, AWND, CDSD...\nlgl  (3): DYFG_ATTRIBUTES, DYHF_ATTRIBUTES, DYTS_ATTRIBUTES\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nWA_spokane <- read_csv(\"data/Climate Data/WA-spokane-climate.csv\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 344 Columns: 88\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (41): STATION, DATE, NAME, CLDD_ATTRIBUTES, DP01_ATTRIBUTES, DP10_ATTRIB...\ndbl (45): LATITUDE, LONGITUDE, ELEVATION, CDSD, CDSD_ATTRIBUTES, CLDD, DP01,...\nlgl  (2): DYFG_ATTRIBUTES, DYTS_ATTRIBUTES\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n# Clarify joining values:\n\nAZ_kingman$LATITUDE <- as.numeric(AZ_kingman$LATITUDE)\nAZ_kingman$LONGITUDE <- as.numeric(AZ_kingman$LONGITUDE)\n\nAZ_phoenix$LATITUDE <- as.numeric(AZ_phoenix$LATITUDE)\nAZ_phoenix$LONGITUDE <- as.numeric(AZ_phoenix$LONGITUDE)\n\nCA_lake_tahoe$LATITUDE <- as.numeric(CA_lake_tahoe$LATITUDE)\nCA_lake_tahoe$LONGITUDE <- as.numeric(CA_lake_tahoe$LONGITUDE)\n\nCA_sandiego$LATITUDE <- as.numeric(CA_sandiego$LATITUDE)\nCA_sandiego$LONGITUDE <- as.numeric(CA_sandiego$LONGITUDE)\n\nCA_santarosa$LATITUDE <- as.numeric(CA_santarosa$LATITUDE)\nCA_santarosa$LONGITUDE <- as.numeric(CA_santarosa$LONGITUDE)\n\nOR_chiloquin$LATITUDE <- as.numeric(OR_chiloquin$LATITUDE)\nOR_chiloquin$LONGITUDE <- as.numeric(OR_chiloquin$LONGITUDE)\n\nOR_hermiston$LATITUDE <- as.numeric(OR_hermiston$LATITUDE)\nOR_hermiston$LONGITUDE <- as.numeric(OR_hermiston$LONGITUDE)\n\nWA_shelton$LATITUDE <- as.numeric(WA_shelton$LATITUDE)\nWA_shelton$LONGITUDE <- as.numeric(WA_shelton$LONGITUDE)\n\nWA_spokane$LATITUDE <- as.numeric(WA_spokane$LATITUDE)\nWA_spokane$LONGITUDE <- as.numeric(WA_spokane$LONGITUDE)\n\n\n#Cleaning Data - the SAGA:\n\nAZ_kingman <- AZ_kingman %>%\n  select(-contains(\"ATTRIBUTES\"))\n\nAZ_phoenix <- AZ_phoenix %>%\n  select(-contains(\"ATTRIBUTES\"))\n\nCA_lake_tahoe <- CA_lake_tahoe %>%\n  select(-contains(\"ATTRIBUTES\"))\n\nCA_sandiego <- CA_sandiego %>%\n  select(-contains(\"ATTRIBUTES\"))\n\nCA_santarosa <- CA_santarosa %>%\n  select(-contains(\"ATTRIBUTES\"))\n\nOR_chiloquin <- OR_chiloquin %>%\n  select(-contains(\"ATTRIBUTES\"))\n\nOR_hermiston <- OR_hermiston %>%\n  select(-contains(\"ATTRIBUTES\"))\n\nWA_shelton <- WA_shelton %>%\n  select(-contains(\"ATTRIBUTES\"))\n\nWA_spokane <- WA_spokane %>%\n  select(-contains(\"ATTRIBUTES\"))\n\n#Adding to a collective list to make join easier!\nstation_list <- list(AZ_kingman, AZ_phoenix, CA_lake_tahoe, CA_sandiego, CA_santarosa, OR_chiloquin, OR_hermiston, WA_shelton, WA_spokane)\n\n\ncleaned_list <- map(station_list, ~ select(.x, -contains(\"ATTRIBUTES\")))\n\n\n#Binding the cleaned data!\nclimate_data <- bind_rows(cleaned_list)\n```\n:::\n\n\n\na. BUILDING SEASONS!:\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Changing into month and year\n\nhead(climate_data$DATE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"1996-07\" \"1996-08\" \"1996-09\" \"1996-10\" \"1996-11\" \"1996-12\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nclimate_data <- climate_data %>%\n  mutate(\n    DATE = paste0(DATE, \"-01\"), # Adding a day component since it was missing!\n    DATE = as.Date(DATE, format = \"%Y-%m-%d\"),\n    year = year(DATE),\n    month = month(DATE)\n  )\n\n# Creating a season:\n\nclimate_data <- climate_data %>%\n  mutate(\n    season = case_when(\n      month %in% c(12, 1, 2)  ~ \"Winter\",\n      month %in% c(3, 4, 5)   ~ \"Spring\",\n      month %in% c(6, 7, 8)   ~ \"Summer\",\n      month %in% c(9, 10, 11) ~ \"Fall\"\n    ))\n\n\n\n# Creating a season with the year to compare for climate\nclimate_data <- climate_data %>%\n  mutate(\n    season_year = if_else(month == 12, year + 1, year)\n  )\n\n\n#Separating temp and precp to clean further!\n\navg_temp <- climate_data %>%\n  mutate(TAVG_F = (TAVG * 9/5) + 32) %>%\n  group_by(STATION, NAME, month, season, season_year) %>%\n  summarize(avg_temp = mean(TAVG_F, na.rm = TRUE), .groups = \"drop\") %>%\n  filter(season_year >= 2000, season_year <= 2024)\n\navg_prec <- climate_data %>%\n  group_by(STATION, NAME, month, season, season_year)%>%\n  summarize(avg_prec = mean(PRCP, na.rm = TRUE), .groups = \"drop\") %>%\n  filter(season_year >= 2000, season_year <= 2024)\n```\n:::\n\n\n\n2. Understanding the changes of average temperature and precipitation in a map!\n\na. Temperature Difference between 2000 - 2024 based on seasonality\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#TEMPERATURE!!!\n\n\n#creating a separte coordination dataframe\nstation_coords <- climate_data %>%\n  select(STATION, LATITUDE, LONGITUDE) %>%\n  distinct()\n\n#joining the two to relay to the map\navg_temp_map <- avg_temp %>%\n  left_join(station_coords, by = \"STATION\")\n\n#loading the u.s. map raster file!\nus_map <- map_data(\"state\")\n\n#Creating map of avg temperature for Selected stations based on seasonality!\n\nggplot(avg_temp_map %>% filter(season_year >= 2000 & season_year <= 2024)) +\n  geom_polygon(data = us_map, aes(x = long, y = lat, group = group),\n               fill = \"gray90\", color = \"white\") +\n  geom_point(aes(x = LONGITUDE, y = LATITUDE, color = avg_temp), size = 2) +\n  scale_color_viridis_c(option = \"plasma\", name = \"Avg Temp (°F)\") +\n  coord_fixed(1.3) +\n  facet_wrap(~season) +\n  labs(title = \"Seasonal Average Temperatures by Station (2000–2024)\",\n       x = \"\", y = \"\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](miaindex_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\n# Let's compare first just what 2000 vs 2024 looks like!\n\n# separating 2000 and 2024\n\navg_temp_2000 <- avg_temp_map %>% filter(season_year == 2000)\navg_temp_2024 <- avg_temp_map %>% filter(season_year == 2024)\n\n# Create the ggplot for 2000\ntemp_2000 <- ggplot(avg_temp_2000) +\n  geom_polygon(data = us_map, aes(x = long, y = lat, group = group),\n               fill = \"gray90\", color = \"white\") +\n  geom_point(aes(x = LONGITUDE, y = LATITUDE, color = avg_temp), size = 2) +\n  scale_color_viridis_c(option = \"plasma\", name = \"Avg. Temp. (°F)\") +\n  coord_fixed(1.3) +\n  facet_wrap(~season) +\n  labs(title = \"Seasonal Average Temperatures (2000)\",\n       x = \"\", y = \"\") +\n  theme_minimal()\n\n# Create the ggplot for 2024\ntemp_2024 <- ggplot(avg_temp_2024) +\n  geom_polygon(data = us_map, aes(x = long, y = lat, group = group),\n               fill = \"gray90\", color = \"white\") +\n  geom_point(aes(x = LONGITUDE, y = LATITUDE, color = avg_temp), size = 2) +\n  scale_color_viridis_c(option = \"plasma\", name = \"Avg. Temp. (°F)\") +\n  coord_fixed(1.3) +\n  facet_wrap(~season) +\n  labs(title = \"Seasonal Average Temperatures (2024)\",\n       x = \"\", y = \"\") +\n  theme_minimal()\n\n\n\n# Arrange them to be side by side!\n\n\ngrid.arrange(temp_2000, temp_2024, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](miaindex_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n\n\n\nb. Precipitation Difference between 2000 - 2024 based on seasonality\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#PRECIPITATION!!!\n\n#joining the two to relay to the map\navg_prec_map <- avg_prec %>%\n  left_join(station_coords, by = \"STATION\")\n\n#Creating map of avg temperature for Selected stations based on seasonality!\n\nggplot(avg_prec_map %>% filter(season_year >= 2000 & season_year <= 2024)) +\n  geom_polygon(data = us_map, aes(x = long, y = lat, group = group),\n               fill = \"gray90\", color = \"white\") +\n  geom_point(data = avg_prec_map %>%\n               filter(season_year >= 2000 & season_year <= 2024),\n             aes(x = LONGITUDE, y = LATITUDE, color = avg_prec), size = 2) +\n  scale_color_viridis_c(option = \"plasma\", name = \"Avg. Prec. (100 μm)\") +\n  coord_fixed(1.3) +\n  facet_wrap(~season) +\n  labs(title = \"Seasonal Average Precipitation by Station (2000–2024)\",\n       x = \"\", y = \"\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](miaindex_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\n# Let's compare first just what 2000 vs 2024 looks like!\n\n# separating 2000 and 2024\n\navg_prec_2000 <- avg_prec_map %>% filter(season_year == 2000)\navg_prec_2024 <- avg_prec_map %>% filter(season_year == 2024)\n\n# Create the ggplot for 2000\nprec_2000 <- ggplot(avg_prec_2000) +\n  geom_polygon(data = us_map, aes(x = long, y = lat, group = group),\n               fill = \"gray90\", color = \"white\") +\n  geom_point(aes(x = LONGITUDE, y = LATITUDE, color = avg_prec), size = 2) +\n  scale_color_viridis_c(option = \"plasma\", name = \"Avg. Prec. (100 μm)\") +\n  coord_fixed(1.3) +\n  facet_wrap(~season) +\n  labs(title = \"Seasonal Average Precipitation (2000)\",\n       x = \"\", y = \"\") +\n  theme_minimal()\n\n# Create the ggplot for 2024\nprec_2024 <- ggplot(avg_prec_2024) +\n  geom_polygon(data = us_map, aes(x = long, y = lat, group = group),\n               fill = \"gray90\", color = \"white\") +\n  geom_point(aes(x = LONGITUDE, y = LATITUDE, color = avg_prec), size = 2) +\n  scale_color_viridis_c(option = \"plasma\", name = \"Avg. Prec. (100 μm)\") +\n  coord_fixed(1.3) +\n  facet_wrap(~season) +\n  labs(title = \"Seasonal Average Precipitation (2024)\",\n       x = \"\", y = \"\") +\n  theme_minimal()\n\n\n\n# Arrange them to be side by side!\n\ngrid.arrange(prec_2000, prec_2024, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](miaindex_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n\n\n\n3. Bird migration pattern time!\n\nBased on eBird data, we are focusing in the Western Pacific region of the U.S. (Arizona, California, Oregon, and Washington). Based on the eBird data set variables for understanding migratory codes:\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# read in bird data:\n\namebit_data <- read_csv(\"data/AB Data/amebit_data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nNew names:\n• `` -> `...22`\n• `` -> `...23`\n• `` -> `...24`\n• `` -> `...25`\n• `` -> `...26`\n• `` -> `...27`\n• `` -> `...28`\n• `` -> `...29`\n• `` -> `...30`\n• `` -> `...31`\n• `` -> `...32`\n• `` -> `...33`\n• `` -> `...34`\n• `` -> `...35`\n• `` -> `...36`\n• `` -> `...37`\n• `` -> `...38`\n• `` -> `...39`\n• `` -> `...40`\n• `` -> `...41`\n• `` -> `...42`\n• `` -> `...43`\n• `` -> `...44`\n• `` -> `...45`\n• `` -> `...46`\n• `` -> `...47`\n• `` -> `...48`\n• `` -> `...49`\n• `` -> `...50`\n• `` -> `...51`\n• `` -> `...52`\n• `` -> `...53`\n• `` -> `...54`\n• `` -> `...55`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 70649 Columns: 55\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (20): OBSERVATION DATE, OBSERVATION COUNT, BREEDING CODE, BREEDING CATE...\ndbl   (4): BCR CODE, LATITUDE, LONGITUDE, NUMBER OBSERVERS\nlgl  (30): AGE/SEX, ...22, ...28, ...29, ...30, ...31, ...32, ...33, ...34, ...\ntime  (1): TIME OBSERVATIONS STARTED\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nView(amebit_data)\n#I already precleaned it because of how much data there was for the American Bittern, so I don't have to clean it that much!\n\n\n# Cleaning the Data to focus on what we want:\n\namebit_monthly <- amebit_data %>%\n  mutate(ob_date = mdy(`OBSERVATION DATE`),\n         year = year(ob_date),\n         month = month(ob_date, label = TRUE)) %>%\n  group_by(year, month) %>%\n  summarize(observations = n(), .groups = \"drop\") %>%\n  filter(year >= 2000, year <= 2024)\n\n\n\n\n# Visualize time:\n\nggplot(amebit_monthly, aes(x = month, y = observations, group = year, color = as.factor(year))) +\n  geom_line(alpha = 0.5) +\n  labs(\n    title = \"Seasonal Observation Trends of American Bittern 2000 - 2024\",\n    x = \"Month\",\n    y = \"Number of Observations\",\n    color = \"Year\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](miaindex_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n\n4. Looking at seasonal changes over time\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nseasonal_summary <- climate_data %>%\n  mutate(\n    TAVG_F = (TAVG * 9/5) + 32,       # Convert temp to Fahrenheit\n    PRCP_mm = PRCP / 10               # Convert tenths of mm to mm\n  ) %>%\n  group_by(season_year, season) %>%\n  summarize(\n    avg_temp = mean(TAVG_F, na.rm = TRUE),\n    avg_precp = mean(PRCP_mm, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  filter(season_year >= 2000, season_year <= 2024)\n\n\n# Reshaping to make plotting easier to understand shifts in Temp and Precip!\n\nlong_summary <- seasonal_summary %>%\n  pivot_longer(cols = c(avg_temp, avg_precp),\n               names_to = \"variable\", values_to = \"value\")\n\n\n# Plotting:\n\nggplot(long_summary, aes(x = season_year, y = value, color = season)) +\n  geom_line(size = 1) +\n  facet_wrap(~ variable, scales = \"free_y\", \n             labeller = as_labeller(c(avg_temp = \"Avg Temp (°F)\", avg_precp = \"Avg Precip (mm)\"))) +\n  labs(\n    title = \"Seasonal Trends in Temperature and Precipitation (2000–2024)\",\n    x = \"Year\", y = NULL\n  ) +\n  scale_color_brewer(palette = \"Set2\", name = \"Season\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](miaindex_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n5. Let's combine them to see if there is a difference!\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Adding seasonality to American Bittern data:\n\namebit_season <- amebit_monthly %>%\n  mutate(season = case_when(\n    month %in% c(\"Dec\", \"Jan\", \"Feb\") ~ \"Winter\",\n    month %in% c(\"Mar\", \"Apr\", \"May\") ~ \"Spring\",\n    month %in% c(\"Jun\", \"Jul\", \"Aug\") ~ \"Summer\",\n    month %in% c(\"Sep\", \"Oct\", \"Nov\") ~ \"Fall\"\n  )) %>%\n  group_by(year, season) %>%\n  summarize(total_obs = sum(observations), .groups = \"drop\")\n\n\n# Merging the climate data and bittern data\n\ncombined_data <- left_join(amebit_season, seasonal_summary, \n                           by = c(\"year\" = \"season_year\", \"season\"))\n\n\n# Visualize climate and bittern data:\n\nggplot(combined_data, aes(x = avg_temp, y = total_obs, color = season)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(\n    title = \"Relationship Between Seasonal Temperature and Bittern Observations\",\n    x = \"Average Temperature (°F)\",\n    y = \"Bittern Observations\"\n  ) +\n  scale_color_brewer(palette = \"Set2\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](miaindex_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\n# Relationship between climate and bittern evolving together!\n\ncombined_long <- combined_data %>%\n  pivot_longer(cols = c(avg_temp, avg_precp, total_obs),\n               names_to = \"variable\", values_to = \"value\")\n\nggplot(combined_long, aes(x = year, y = value, color = season)) +\n  geom_line() +\n  facet_wrap(~ variable, scales = \"free_y\",\n             labeller = as_labeller(c(\n               avg_temp = \"Avg Temp (°F)\",\n               avg_precp = \"Avg Precip (mm)\",\n               total_obs = \"Bittern Observations\"\n             ))) +\n  labs(\n    title = \"Bittern Observations and Climate Trends by Season (2000–2024)\",\n    x = \"Year\", y = NULL\n  ) +\n  scale_color_brewer(palette = \"Set2\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](miaindex_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "miaindex_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}